#!/bin/bash
#  IBM_PROLOG_BEGIN_TAG
#  This is an automatically generated prolog.
#
#  $Source: src/test/run_regression $
#
# IBM Data Engine for NoSQL - Power Systems Edition User Library Project
#
# Contributors Listed Below - COPYRIGHT 2014,2017
# [+] International Business Machines Corp.
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
# IBM_PROLOG_END_TAG

usage()
{
  echo "Usage: /dev/sgX [/dev/sgX:/dev/sgY]";
  exit 0;
}

if [[ -z $1 || $1 = "-h" || $1 =~ help ]]; then usage; fi

dev=$1
if [[ ! -z $2 ]]; then r0dev=$2; fi

if [[ ! -e $dev || ! -e /dev/cxl ]]
then
  echo "No capi-flash adapter found";
  usage;
fi

if [[ $(id -u) != 0 ]]; then echo "use sudo"; exit 1; fi

set -o pipefail
export PATH=$PATH:/usr/bin
echo 1000000  > /sys/kernel/debug/powerpc/eeh_max_freezes
echo "module cxlflash +p" > /sys/kernel/debug/dynamic_debug/control
unset FVT_EEH
success=1

if [[ $(cflash_devices -t 0628) =~ $dev ]]; then gtp=1; fi
if [[ $(cflash_devices -t 0601) =~ $dev ]]; then gt=1;  fi

################################################################################
# determine distro
################################################################################
if [[ $(cat /etc/os-release 2>/dev/null) =~ Ubuntu ]];         then ubuntu=1; fi
if [[ $(cat /etc/os-release 2>/dev/null) =~ Red ]];            then redhat=1; fi
if [[ $(cat /etc/os-release 2>/dev/null) =~ Fedora ]];         then redhat=1; fi
if [[ $(grep platform /proc/cpuinfo 2>/dev/null) =~ pSeries ]];then VM=1;     fi

################################################################################
# setup output dir/filename
################################################################################
start=$(date +"%Y%m%d_%H%M")
out=$start
if [[ ! -z $USER ]]; then out+=_$USER; fi
out+=_$(cat /usr/share/cxlflash/version.txt|awk -F- '{print $1}')
dir=/var/log/cflash/regr
if [[ ! -e /var/log/cflash/regr ]]; then mkdir -p $dir; fi
out=$dir/$out

################################################################################
do_block_fvt()
{
  unset parms
  export FVT_DEV=$1

  if [[ -z $2 ]]; then parms=""; fi
  run_block_fvt --gtest_filter=-*RAID0* | tee -a $out

  [[ $? -ne 0 ]] && success=0

  export FVT_DEV_RAID0=$2
  run_block_fvt --gtest_filter=*RAID0*

  [[ $? -ne 0 ]] && success=0
}

################################################################################
do_kv_fvt()
{
  unset parms
  export FVT_DEV=$1
  export FVT_DEV_PERSIST=$1

  run_fvt_kv $parms | tee -a $out
  [[ $? -ne 0 ]] && success=0
}

################################################################################
do_kv_raid0_fvt()
{
  unset parms
  if [[ ! -z $1 ]]
  then
    export FVT_DEV=$1
    export FVT_DEV_PERSIST=$1

    run_fvt_kv $parms | tee -a $out
    [[ $? -ne 0 ]] && success=0
  fi
}

################################################################################
do_cflash_fvt()
{
  unset parms
  export FVT_DEV=$1
  if [[ $gtp ]]
  then

    parms="--gtest_filter=-*EEH*:*E_test_SPIO_RLS_DET:*ioarcb_ea_null"

  elif [[ $gt ]]; then

    parms="--gtest_filter=-*ioarcb_ea_null"

  fi

  run_cflash_fvt $parms | tee -a $out
  [[ $? -ne 0 ]] && success=0
}

################################################################################
do_eeh_fvt()
{
  unset parms
  export FVT_EEH=1
  export FVT_DEV=$1
  export FVT_DEV_PERSIST=$1

  parms="--gtest_filter=*EEH"

  run_fvt $parms | tee -a $out
  [[ $? -ne 0 ]] && success=0

  unset FVT_EEH

  run_fvt_scripts --gtest_filter=*PERST* | tee -a $out
  [[ $? -ne 0 ]] && success=0
}

################################################################################
do_scripts_fvt()
{
  unset parms
  export FVT_DEV=$1

  parms="--gtest_filter=-*PERST*"

  if [[ $(cflash_version) =~ missing ]]
  then
    parms="$parms:*CFLVER*"
  fi

  run_fvt_scripts $parms | tee -a $out
  [[ $? -ne 0 ]] && success=0
}

################################################################################
do_multi_vlun_io()
{
  unset parms
  if [[ ! -z $1 ]]
  then
    export FVT_DEV=$1
    export FVT_DEV_RAID0=$2
    export FVT_NUM_LOOPS=20
    parms="--gtest_filter=*BLK_API_FVT_RAID0_multi_vlun_perf_test"
    run_block_fvt $parms | tee -a $out
    [[ $? -ne 0 ]] && success=0
  fi
}

################################################################################
# M A I N
################################################################################
                   do_block_fvt     $dev $r0dev
[[ -z $r0dev ]] && do_kv_fvt        $dev
                   do_multi_vlun_io $dev $r0dev
[[ $r0dev ]]    && do_kv_raid0_fvt  $r0dev
                   do_cflash_fvt    $dev
                   do_scripts_fvt   $dev
                   do_eeh_fvt       $dev

if [[ $success -eq 1 ]]
then
  echo SUCCESS
  touch $out.success
else
  echo "some tests failed"
fi
